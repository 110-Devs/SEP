import {CircularProgress} from "@mui/material";
import StateView from "@frontend/app/components/core/StateView";
import {useGet<%= className %>} from "@frontend/queries/<%= serviceNames.fileName %>/use-get-<%= fileName %>";
import {<%= serviceNames.className %><%= nsClassName %><%= className %>VORuntimeInfo} from "@app/shared/types/<%= serviceNames.fileName %><%= nsFilename %><%= fileName %>";
import {determineQueryPayload} from "@app/shared/utils/determine-query-payload";
import {<%= serviceNames.className %>Get<%= className %>QueryRuntimeInfo} from "@app/shared/queries/<%= serviceNames.fileName %>/get-<%= fileName %>";

type <%= className %>Props = Record<string, string> & {<%= identifier %>: string};

const <%= className %> = (props: <%= className %>Props) => {
  const query = useGet<%= className %>(determineQueryPayload(props, <%= serviceNames.className %>Get<%= className %>QueryRuntimeInfo));

  return <>
    {query.isLoading && <CircularProgress />}
    {query.isSuccess && <StateView description={<%= serviceNames.className %><%= nsClassName %><%= className %>VORuntimeInfo} state={query.data} />}
  </>
}

export default <%= className %>;
